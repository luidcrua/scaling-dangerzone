// Generated by CoffeeScript 1.6.3
(function() {
  var ListCtrl,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ListCtrl = (function(_super) {
    __extends(ListCtrl, _super);

    ListCtrl.prototype.elements = {
      "footer a:first-child": "pending",
      "footer a:last-child": "finished"
    };

    function ListCtrl() {
      this.bindTaskChange = __bind(this.bindTaskChange, this);
      this.bindTaskCreate = __bind(this.bindTaskCreate, this);
      ListCtrl.__super__.constructor.apply(this, arguments);
      __Model.Task.bind("create", this.bindTaskCreate);
      __Model.Task.bind("change", this.bindTaskChange);
    }

    ListCtrl.prototype.bindTaskCreate = function(task) {
      var view;
      view = new __View.Task({
        model: task
      });
      return view.append(task);
    };

    ListCtrl.prototype.bindTaskChange = function(task) {
      var tasks;
      console.error("alguien ha actualizado la tarea ", task);
      tasks = __Model.Task;
      Lungo.Element.count(this.pending.selector, tasks.pending().length);
      return Lungo.Element.count(this.finished.selector, tasks.finished().length);
    };

    return ListCtrl;

  })(Monocle.Controller);

  __Controller.list = new ListCtrl("section#third");

  Lungo.ready(function() {
    __Model.Task.create({
      name: "Tarea 1",
      description: "Lorem"
    });
    __Model.Task.create({
      name: "Tarea 2",
      description: "Lorem"
    });
    return __Model.Task.create({
      name: "Tarea 3",
      description: "Lorem"
    });
  });

}).call(this);
